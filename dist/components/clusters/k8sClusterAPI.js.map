{"version":3,"sources":["../../../src/components/clusters/k8sClusterAPI.js"],"names":["K8sClusterAPI","clusterID","backendSrv","cluster_id","baseUrl","baseApiUrl","apiResource","get","rawApiResourceUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAAaA,a;AACX;AACA,+BAAYC,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AACjC,eAAKC,UAAL,GAAkBF,SAAlB;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKE,OAAL,GAAe,2BAA2B,KAAKD,UAA/C;AACA,eAAKE,UAAL,GAAkB,KAAKD,OAAL,GAAe,UAAjC;AACD;;;;8BAEGE,W,EAAa;AACf,mBAAO,KAAKJ,UAAL,CAAgBK,GAAhB,CAAoB,KAAKF,UAAL,GAAkBC,WAAtC,CAAP;AACD;;;yCAEcE,iB,EAAmB;AAChC,mBAAO,KAAKN,UAAL,CAAgBK,GAAhB,CAAoB,KAAKH,OAAL,GAAeI,iBAAnC,CAAP;AACD","file":"k8sClusterAPI.js","sourcesContent":["export class K8sClusterAPI {\n  /** @ngInject */\n  constructor(clusterID, backendSrv) {\n    this.cluster_id = clusterID;\n    this.backendSrv = backendSrv;\n    this.baseUrl = 'api/datasources/proxy/' + this.cluster_id;\n    this.baseApiUrl = this.baseUrl + '/api/v1/';\n  }\n\n  get(apiResource) {\n    return this.backendSrv.get(this.baseApiUrl + apiResource);\n  }\n\n  getRawResource(rawApiResourceUrl) {\n    return this.backendSrv.get(this.baseUrl + rawApiResourceUrl);\n  }\n}\n"]}