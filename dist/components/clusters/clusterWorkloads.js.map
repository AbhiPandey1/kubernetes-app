{"version":3,"sources":["../../../src/components/clusters/clusterWorkloads.js"],"names":["slugify","str","slug","replace","extractContainerID","dockerIDPattern","exec","_","$","K8sClusterAPI","ClusterWorkloadsCtrl","$scope","$injector","backendSrv","$q","$location","alertSrv","pageReady","cluster","namespaces","namespace","daemonSets","replicationControllers","deployments","pods","search","set","getCluster","then","clusterAPI","id","getWorkloads","get","ns","items","getDaemonSets","ds","getReplicationControllers","rc","getDeployments","deploy","getPods","pod","component","health","forEach","conditions","condition","type","status","componentHealth","evt","clickTargetIsLinkOrHasLinkParents","target","closest","length","containerIDs","map","containerStatuses","containerID","path","jsonData","name","spec","nodeName","closestElm","head","clickTargetClickAttr","find","attributes","clickTargetIsNodeDashboard","value","metadata","prefix","resource","getRawResource","getResource","templateUrl"],"mappings":"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","file":"clusterWorkloads.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport {K8sClusterAPI} from './k8sClusterAPI';\n\nfunction slugify(str) {\n  var slug = str.replace(\"@\", \"at\").replace(\"&\", \"and\").replace(\".\", \"_\").replace(\"/\\W+/\", \"\");\n  return slug;\n}\n\nfunction extractContainerID(str) {\n  var dockerIDPattern = /docker\\:\\/\\/(.{12})/;\n  return dockerIDPattern.exec(str)[1];\n}\n\nexport class ClusterWorkloadsCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, backendSrv, $q, $location, alertSrv) {\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.$location = $location;\n\n    this.pageReady = false;\n    this.cluster = {};\n    this.namespaces = [];\n    this.namespace = \"\";\n    this.daemonSets = [];\n    this.replicationControllers = [];\n    this.deployments = [];\n    this.pods = [];\n\n    if (!(\"cluster\" in $location.search())) {\n      alertSrv.set(\"no cluster specified.\", \"no cluster specified in url\", 'error');\n      return;\n    }\n\n    if (\"namespace\" in $location.search()) {\n      this.namespace = $location.search().namespace;\n    }\n\n    this.getCluster($location.search().cluster).then(() => {\n      this.clusterAPI = new K8sClusterAPI(this.cluster.id, backendSrv);\n      this.pageReady = true;\n      this.getWorkloads();\n    });\n  }\n\n  getWorkloads() {\n    this.clusterAPI.get('namespaces').then(ns => {\n      this.namespaces = ns.items;\n    });\n    this.getDaemonSets().then(ds => {\n      this.daemonSets = ds.items;\n    });\n    this.getReplicationControllers().then(rc => {\n      this.replicationControllers = rc.items;\n    });\n    this.getDeployments().then(deploy => {\n      this.deployments = deploy.items;\n    });\n    this.getPods().then(pod => {\n      this.pods = pod.items;\n    });\n  }\n\n  getCluster(id) {\n    return this.backendSrv.get('api/datasources/'+id).then(ds => {\n      this.cluster = ds;\n    });\n  }\n\n  componentHealth(component) {\n    var health = \"unhealthy\";\n    _.forEach(component.conditions, function(condition) {\n      if ((condition.type === \"Healthy\") && (condition.status === \"True\")) {\n        health = \"healthy\";\n      }\n    });\n    return health;\n  }\n\n  isComponentHealthy(component) {\n    return this.componentHealth(component) === \"healthy\";\n  }\n\n  goToPodDashboard(pod, evt) {\n    var clickTargetIsLinkOrHasLinkParents = $(evt.target).closest('a').length > 0;\n    if (clickTargetIsLinkOrHasLinkParents === false) {\n      var containerIDs = _.map(pod.status.containerStatuses, (status) => {\n        return extractContainerID(status.containerID);\n      });\n      this.$location.path(\"dashboard/db/kubernetes-container\")\n      .search({\n        \"var-datasource\": this.cluster.jsonData.ds,\n        \"var-cluster\": this.cluster.name,\n        \"var-node\": slugify(pod.spec.nodeName),\n        \"var-container\": containerIDs\n      });\n    }\n  }\n\n  goToPodInfo(pod, evt) {\n    var clickTargetIsLinkOrHasLinkParents = $(evt.target).closest('a').length > 0;\n\n    var closestElm = _.head($(evt.target).closest('div'));\n    var clickTargetClickAttr = _.find(closestElm.attributes, {name: \"ng-click\"});\n    var clickTargetIsNodeDashboard = clickTargetClickAttr ? clickTargetClickAttr.value === \"ctrl.goToPodDashboard(pod, $event)\" : false;\n    if (clickTargetIsLinkOrHasLinkParents === false &&\n        clickTargetIsNodeDashboard === false) {\n      this.$location.path(\"plugins/raintank-kubernetes-app/page/pod-info\")\n      .search({\n        \"cluster\": this.cluster.id,\n        \"namespace\": slugify(pod.metadata.namespace),\n        \"pod\": slugify(pod.metadata.name)\n      });\n    }\n  }\n\n  getResource(prefix, resource) {\n    if (this.namespace) {\n      resource = \"namespaces/\" + this.namespace + \"/\" + resource;\n    }\n\n    return this.clusterAPI.getRawResource(prefix + resource);\n  }\n\n  getDaemonSets() {\n    return this.getResource(\"/apis/extensions/v1beta1/\", \"daemonsets\");\n  }\n\n  getReplicationControllers() {\n    return this.getResource(\"/api/v1/\", \"replicationcontrollers\");\n  }\n\n  getDeployments() {\n    return this.getResource(\"/apis/extensions/v1beta1/\", \"deployments\");\n  }\n\n  getPods() {\n    return this.getResource(\"/api/v1/\", \"pods\");\n  }\n}\n\nClusterWorkloadsCtrl.templateUrl = 'components/clusters/partials/cluster_workloads.html';\n"]}