{"version":3,"sources":["../../../src/components/clusters/podInfo.js"],"names":["PodInfoCtrl","$scope","$injector","backendSrv","$q","$location","alertSrv","pageReady","pod","search","set","cluster_id","cluster","namespace","getPod","then","api_resource","request","url","method","headers","name","k8sApiRequest_GET","condition","status","type","value","text","conditionStatus","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BACaA,W;AACX;AACA,6BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2CC,EAA3C,EAA+CC,SAA/C,EAA0DC,QAA1D,EAAoE;AAAA;;AAAA;;AAClE,eAAKF,EAAL,GAAUA,EAAV;AACA,eAAKD,UAAL,GAAkBA,UAAlB;AACA,eAAKE,SAAL,GAAiBA,SAAjB;AACA,eAAKE,SAAL,GAAiB,KAAjB;AACA,eAAKC,GAAL,GAAW,EAAX;AACA,cAAI,EAAE,aAAaH,UAAUI,MAAV,EAAb,IAAmC,eAAeJ,UAAUI,MAAV,EAApD,CAAJ,EAA6E;AAC3EH,qBAASI,GAAT,CAAa,oCAAb,EAAmD,0CAAnD,EAA+F,OAA/F;AACA;AACD,WAHD,MAGO;AACL,iBAAKC,UAAL,GAAkBN,UAAUI,MAAV,GAAmBG,OAArC;AACA,iBAAKC,SAAL,GAAiBR,UAAUI,MAAV,GAAmBI,SAApC;AACD;;AAED,eAAKC,MAAL,CAAYT,UAAUI,MAAV,GAAmBI,SAA/B,EAA0CR,UAAUI,MAAV,GAAmBD,GAA7D,EACGO,IADH,CACQ,YAAM;AACV,kBAAKR,SAAL,GAAiB,IAAjB;AACD,WAHH;AAID;;;;4CAEiBS,Y,EAAc;AAC9B,mBAAO,KAAKb,UAAL,CAAgBc,OAAhB,CAAwB;AAC7BC,mBAAK,2BAA2B,KAAKP,UAAhC,GAA6C,UAA7C,GAA0DK,YADlC;AAE7BG,sBAAQ,KAFqB;AAG7BC,uBAAS,EAAE,gBAAgB,kBAAlB;AAHoB,aAAxB,CAAP;AAKD;;;iCAEMP,S,EAAWQ,I,EAAM;AAAA;;AACtB,mBAAO,KAAKC,iBAAL,CAAuB,gBAAgBT,SAAhB,GAA4B,QAA5B,GAAuCQ,IAA9D,EACJN,IADI,CACC,UAACP,GAAD,EAAS;AACb,qBAAKA,GAAL,GAAWA,GAAX;AACD,aAHI,CAAP;AAID;;;0CAEee,S,EAAW;AACzB,gBAAIC,MAAJ;AACA,gBAAID,UAAUE,IAAV,KAAmB,OAAvB,EAAgC;AAC9BD,uBAASD,UAAUC,MAAV,KAAqB,MAA9B;AACD,aAFD,MAEO;AACLA,uBAASD,UAAUC,MAAV,KAAqB,OAA9B;AACD;;AAED,mBAAO;AACLE,qBAAOF,MADF;AAELG,oBAAMH,SAAS,IAAT,GAAgB;AAFjB,aAAP;AAID;;;wCAEaD,S,EAAW;AACvB,mBAAO,KAAKK,eAAL,CAAqBL,SAArB,EAAgCG,KAAvC;AACD;;;;;;;;AAGH1B,kBAAY6B,WAAZ,GAA0B,4CAA1B","file":"podInfo.js","sourcesContent":["\nexport class PodInfoCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, backendSrv, $q, $location, alertSrv) {\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.$location = $location;\n    this.pageReady = false;\n    this.pod = {};\n    if (!(\"cluster\" in $location.search() && \"namespace\" in $location.search())) {\n      alertSrv.set(\"no cluster or namespace specified.\", \"no cluster or namespace specified in url\", 'error');\n      return;\n    } else {\n      this.cluster_id = $location.search().cluster;\n      this.namespace = $location.search().namespace;\n    }\n\n    this.getPod($location.search().namespace, $location.search().pod)\n      .then(() => {\n        this.pageReady = true;\n      });\n  }\n\n  k8sApiRequest_GET(api_resource) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + this.cluster_id + '/api/v1/' + api_resource,\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  getPod(namespace, name) {\n    return this.k8sApiRequest_GET('namespaces/' + namespace + '/pods/' + name)\n      .then((pod) => {\n        this.pod = pod;\n      });\n  }\n\n  conditionStatus(condition) {\n    var status;\n    if (condition.type === \"Ready\") {\n      status = condition.status === \"True\";\n    } else {\n      status = condition.status === \"False\";\n    }\n\n    return {\n      value: status,\n      text: status ? \"Ok\" : \"Error\"\n    };\n  }\n\n  isConditionOk(condition) {\n    return this.conditionStatus(condition).value;\n  }\n}\n\nPodInfoCtrl.templateUrl = 'components/clusters/partials/pod_info.html';\n"]}