{"version":3,"sources":["../../../src/components/clusters/nodeInfo.js"],"names":["moment","NodeInfoCtrl","$scope","$injector","backendSrv","$q","$location","alertSrv","pageReady","node","search","set","cluster_id","cluster","getNode","then","api_resource","request","url","method","headers","name","k8sApiRequest_GET","condition","status","type","value","text","conditionStatus","lastTransitionTime","format","templateUrl"],"mappings":";;;;;;;;;;;;;;;AAAOA,Y;;;;;;;;;;;;;;;;;;;;;8BAEMC,Y;AACX;AACA,8BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2CC,EAA3C,EAA+CC,SAA/C,EAA0DC,QAA1D,EAAoE;AAAA;;AAAA;;AAClE,eAAKF,EAAL,GAAUA,EAAV;AACA,eAAKD,UAAL,GAAkBA,UAAlB;AACA,eAAKE,SAAL,GAAiBA,SAAjB;AACA,eAAKE,SAAL,GAAiB,KAAjB;AACA,eAAKC,IAAL,GAAY,EAAZ;AACA,cAAI,EAAE,aAAaH,UAAUI,MAAV,EAAf,CAAJ,EAAwC;AACtCH,qBAASI,GAAT,CAAa,uBAAb,EAAsC,6BAAtC,EAAqE,OAArE;AACA;AACD,WAHD,MAGO;AACL,iBAAKC,UAAL,GAAkBN,UAAUI,MAAV,GAAmBG,OAArC;AACD;;AAED,eAAKC,OAAL,CAAaR,UAAUI,MAAV,GAAmBD,IAAhC,EACGM,IADH,CACQ,YAAM;AACV,kBAAKP,SAAL,GAAiB,IAAjB;AACD,WAHH;AAID;;;;4CAEiBQ,Y,EAAc;AAC9B,mBAAO,KAAKZ,UAAL,CAAgBa,OAAhB,CAAwB;AAC7BC,mBAAK,2BAA2B,KAAKN,UAAhC,GAA6C,UAA7C,GAA0DI,YADlC;AAE7BG,sBAAQ,KAFqB;AAG7BC,uBAAS,EAAE,gBAAgB,kBAAlB;AAHoB,aAAxB,CAAP;AAKD;;;kCAEOC,I,EAAM;AAAA;;AACZ,mBAAO,KAAKC,iBAAL,CAAuB,WAAWD,IAAlC,EACJN,IADI,CACC,UAACN,IAAD,EAAU;AACd,qBAAKA,IAAL,GAAYA,IAAZ;AACD,aAHI,CAAP;AAID;;;0CAEec,S,EAAW;AACzB,gBAAIC,MAAJ;AACA,gBAAID,UAAUE,IAAV,KAAmB,OAAvB,EAAgC;AAC9BD,uBAASD,UAAUC,MAAV,KAAqB,MAA9B;AACD,aAFD,MAEO;AACLA,uBAASD,UAAUC,MAAV,KAAqB,OAA9B;AACD;;AAED,mBAAO;AACLE,qBAAOF,MADF;AAELG,oBAAMH,SAAS,IAAT,GAAgB;AAFjB,aAAP;AAID;;;wCAEaD,S,EAAW;AACvB,mBAAO,KAAKK,eAAL,CAAqBL,SAArB,EAAgCG,KAAvC;AACD;;;sDAE2BH,S,EAAW;AACrC,mBAAOvB,OAAOuB,UAAUM,kBAAjB,EAAqCC,MAArC,CAA4C,qBAA5C,CAAP;AACD;;;;;;;;AAGH7B,mBAAa8B,WAAb,GAA2B,6CAA3B","file":"nodeInfo.js","sourcesContent":["import moment from 'moment';\n\nexport class NodeInfoCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, backendSrv, $q, $location, alertSrv) {\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.$location = $location;\n    this.pageReady = false;\n    this.node = {};\n    if (!(\"cluster\" in $location.search())) {\n      alertSrv.set(\"no cluster specified.\", \"no cluster specified in url\", 'error');\n      return;\n    } else {\n      this.cluster_id = $location.search().cluster;\n    }\n\n    this.getNode($location.search().node)\n      .then(() => {\n        this.pageReady = true;\n      });\n  }\n\n  k8sApiRequest_GET(api_resource) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + this.cluster_id + '/api/v1/' + api_resource,\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  getNode(name) {\n    return this.k8sApiRequest_GET('nodes/' + name)\n      .then((node) => {\n        this.node = node;\n      });\n  }\n\n  conditionStatus(condition) {\n    var status;\n    if (condition.type === \"Ready\") {\n      status = condition.status === \"True\";\n    } else {\n      status = condition.status === \"False\";\n    }\n\n    return {\n      value: status,\n      text: status ? \"Ok\" : \"Error\"\n    };\n  }\n\n  isConditionOk(condition) {\n    return this.conditionStatus(condition).value;\n  }\n\n  conditionLastTransitionTime(condition) {\n    return moment(condition.lastTransitionTime).format('YYYY-MM-DD HH:mm:ss');\n  }\n}\n\nNodeInfoCtrl.templateUrl = 'components/clusters/partials/node_info.html';"]}