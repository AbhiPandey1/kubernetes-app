{"version":3,"sources":["../../src/datasource/datasource.js"],"names":["addNamespace","namespace","K8sDatasource","instanceSettings","backendSrv","type","url","name","baseApiUrl","datasourceRequest","method","then","response","status","message","title","apiResource","headers","data","error","_get","result","items"],"mappings":";;;;;;;;;;;;;AA4FA,WAASA,YAAT,CAAsBC,SAAtB,EAAiC;AAC/B,WAAOA,YAAY,gBAAgBA,SAAhB,GAA4B,GAAxC,GAA8C,EAArD;AACD;;;;;;;;;;;;;;;;;;;;;;+BA9FYC,a;AACX,+BAAYC,gBAAZ,EAA8BC,UAA9B,EAA0C;AAAA;;AACxC,eAAKC,IAAL,GAAYF,iBAAiBE,IAA7B;AACA,eAAKC,GAAL,GAAWH,iBAAiBG,GAA5B;AACA,eAAKC,IAAL,GAAYJ,iBAAiBI,IAA7B;AACA,eAAKH,UAAL,GAAkBA,UAAlB;;AAEA,eAAKI,UAAL,GAAkB,UAAlB;AACD;;;;2CAEgB;AACf,mBAAO,KAAKJ,UAAL,CAAgBK,iBAAhB,CAAkC;AACvCH,mBAAK,KAAKA,GAAL,GAAW,GADuB;AAEvCI,sBAAQ;AAF+B,aAAlC,EAGJC,IAHI,CAGC,oBAAY;AAClB,kBAAIC,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAO,EAAEA,QAAQ,SAAV,EAAqBC,SAAS,wBAA9B,EAAwDC,OAAO,SAA/D,EAAP;AACD;AACF,aAPM,CAAP;AAQD;;;+BAEIC,W,EAAa;AAChB,mBAAO,KAAKZ,UAAL,CAAgBK,iBAAhB,CAAkC;AACvCH,mBAAK,KAAKA,GAAL,GAAWU,WADuB;AAEvCN,sBAAQ,KAF+B;AAGvCO,uBAAS,EAAE,gBAAgB,kBAAlB;AAH8B,aAAlC,EAIJN,IAJI,CAKL,oBAAY;AACV,qBAAOC,SAASM,IAAhB;AACD,aAPI,EAOF,iBAAS;AACV,qBAAOC,KAAP;AACD,aATI,CAAP;AAUD;;;qCAEU;AACT,mBAAO,KAAKC,IAAL,CAAU,eAAV,EACJT,IADI,CACC,kBAAU;AACd,qBAAOU,OAAOC,KAAd;AACD,aAHI,CAAP;AAID;;;kCAEOf,I,EAAM;AACZ,mBAAO,KAAKa,IAAL,CAAU,mBAAmBb,IAA7B,CAAP;AACD;;;0CAEe;AACd,mBAAO,KAAKa,IAAL,CAAU,oBAAV,EACJT,IADI,CACC,kBAAU;AACd,qBAAOU,OAAOC,KAAd;AACD,aAHI,CAAP;AAID;;;iDAEsB;AACrB,mBAAO,KAAKF,IAAL,CAAU,2BAAV,EACJT,IADI,CACC,kBAAU;AACd,qBAAOU,OAAOC,KAAd;AACD,aAHI,CAAP;AAID;;;wCAEarB,S,EAAW;AACvB,mBAAO,KAAKmB,IAAL,CAAU,8BAA8BpB,aAAaC,SAAb,CAA9B,GAAwD,YAAlE,EACJU,IADI,CACC,kBAAU;AACd,qBAAOU,OAAOC,KAAd;AACD,aAHI,CAAP;AAID;;;oDAEyBrB,S,EAAW;AACnC,mBAAO,KAAKmB,IAAL,CAAU,aAAapB,aAAaC,SAAb,CAAb,GAAuC,wBAAjD,EACJU,IADI,CACC,kBAAU;AACd,qBAAOU,OAAOC,KAAd;AACD,aAHI,CAAP;AAID;;;yCAEcrB,S,EAAW;AACxB,mBAAO,KAAKmB,IAAL,CAAU,8BAA8BpB,aAAaC,SAAb,CAA9B,GAAwD,aAAlE,EACJU,IADI,CACC,kBAAU;AACd,qBAAOU,OAAOC,KAAd;AACD,aAHI,CAAP;AAID;;;kCAEOrB,S,EAAW;AACjB,mBAAO,KAAKmB,IAAL,CAAU,aAAapB,aAAaC,SAAb,CAAb,GAAuC,MAAjD,EACJU,IADI,CACC,kBAAU;AACd,qBAAOU,OAAOC,KAAd;AACD,aAHI,CAAP;AAID;;;iCAEMrB,S,EAAWM,I,EAAM;AACtB,mBAAO,KAAKa,IAAL,CAAU,aAAapB,aAAaC,SAAb,CAAb,GAAuC,OAAvC,GAAiDM,IAA3D,CAAP;AACD","file":"datasource.js","sourcesContent":["export class K8sDatasource {\n  constructor(instanceSettings, backendSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.backendSrv = backendSrv;\n\n    this.baseApiUrl = '/api/v1/';\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  _get(apiResource) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + apiResource,\n      method: \"GET\",\n      headers: { 'Content-Type': 'application/json' }\n    }).then(\n      response => {\n        return response.data;\n      }, error => {\n        return error;\n      });\n  }\n\n  getNodes() {\n    return this._get('/api/v1/nodes')\n      .then(result => {\n        return result.items;\n      });\n  }\n\n  getNode(name) {\n    return this._get('/api/v1/nodes/' + name);\n  }\n\n  getNamespaces() {\n    return this._get('/api/v1/namespaces')\n      .then(result => {\n        return result.items;\n      });\n  }\n\n  getComponentStatuses() {\n    return this._get('/api/v1/componentstatuses')\n      .then(result => {\n        return result.items;\n      });\n  }\n\n  getDaemonSets(namespace) {\n    return this._get('/apis/extensions/v1beta1/' + addNamespace(namespace) + 'daemonsets')\n      .then(result => {\n        return result.items;\n      });\n  }\n\n  getReplicationControllers(namespace) {\n    return this._get('/api/v1/' + addNamespace(namespace) + 'replicationcontrollers')\n      .then(result => {\n        return result.items;\n      });\n  }\n\n  getDeployments(namespace) {\n    return this._get('/apis/extensions/v1beta1/' + addNamespace(namespace) + 'deployments')\n      .then(result => {\n        return result.items;\n      });\n  }\n\n  getPods(namespace) {\n    return this._get('/api/v1/' + addNamespace(namespace) + 'pods')\n      .then(result => {\n        return result.items;\n      });\n  }\n\n  getPod(namespace, name) {\n    return this._get('/api/v1/' + addNamespace(namespace) + 'pods/' + name);\n  }\n}\n\nfunction addNamespace(namespace) {\n  return namespace ? 'namespaces/' + namespace + '/' : '';\n}"]}