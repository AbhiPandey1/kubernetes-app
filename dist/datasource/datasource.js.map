{"version":3,"sources":["../../src/datasource/datasource.js"],"names":["K8sDatasource","instanceSettings","backendSrv","type","url","name","datasourceRequest","method","then","response","status","message","title"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAAaA,a;AACX,+BAAYC,gBAAZ,EAA8BC,UAA9B,EAA0C;AAAA;;AACxC,eAAKC,IAAL,GAAYF,iBAAiBE,IAA7B;AACA,eAAKC,GAAL,GAAWH,iBAAiBG,GAA5B;AACA,eAAKC,IAAL,GAAYJ,iBAAiBI,IAA7B;AACA,eAAKH,UAAL,GAAkBA,UAAlB;AACD;;;;2CAEgB;AACf,mBAAO,KAAKA,UAAL,CAAgBI,iBAAhB,CAAkC;AACvCF,mBAAK,KAAKA,GAAL,GAAW,GADuB;AAEvCG,sBAAQ;AAF+B,aAAlC,EAGJC,IAHI,CAGC,oBAAY;AAClB,kBAAIC,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAO,EAAEA,QAAQ,SAAV,EAAqBC,SAAS,wBAA9B,EAAwDC,OAAO,SAA/D,EAAP;AACD;AACF,aAPM,CAAP;AAQD","file":"datasource.js","sourcesContent":["export class K8sDatasource {\n  constructor(instanceSettings, backendSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.backendSrv = backendSrv;\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n}"]}